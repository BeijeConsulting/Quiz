<?xml version="1.0" encoding="UTF-8" standalone="no"?><domande><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="1" question="1"><testo>
			Given:
			
			class EJava {
			 //..code
			}
			
			Which of the following options will compile?
		</testo><risposte type="checkbox"><risposta type="A">
				package java.oca.associate;
				class Guru {
					EJava eJava = new EJava();
				}
			</risposta><risposta type="B">package java.oca;
				import EJava;
				class Guru {
					EJava eJava;
				}
			</risposta><risposta type="C">package java.oca.*;
				import java.default.*;
				class Guru {
					EJava eJava;
				}
			</risposta><risposta type="D">package java.oca.associate;
				import default.*;
				class Guru {
					default.EJava eJava;
				}
			</risposta><risposta type="E">None of the above</risposta></risposte><risposteEsatte>E</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="1" question="1"><testo>
			Given:
			
			class EJava {
			 //..code
			}
			
			Which of the following options will compile?
		</testo><risposte type="checkbox"><risposta type="A">
				package java.oca.associate;
				class Guru {
					EJava eJava = new EJava();
				}
			</risposta><risposta type="B">package java.oca;
				import EJava;
				class Guru {
					EJava eJava;
				}
			</risposta><risposta type="C">package java.oca.*;
				import java.default.*;
				class Guru {
					EJava eJava;
				}
			</risposta><risposta type="D">package java.oca.associate;
				import default.*;
				class Guru {
					default.EJava eJava;
				}
			</risposta><risposta type="E">None of the above</risposta></risposte><risposteEsatte>E</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="2" question="2"><testo>
			The following numbered list of Java class components is not in any particular
			order. Select the correct order of their occurrence in a Java class (choose all that apply):
			
			1 comments
			2 import statement
			3 package statement
			4 methods
			5 class declaration
			6 variables
		</testo><risposte type="checkbox"><risposta type="A">1, 3, 2, 5, 6, 4</risposta><risposta type="B">3, 1, 2, 5, 4, 6</risposta><risposta type="C">3, 2, 1, 4, 5, 6</risposta><risposta type="D">3, 2, 1, 5, 6, 4</risposta></risposte><risposteEsatte>A, B, D</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="2" question="2"><testo>
			The following numbered list of Java class components is not in any particular
			order. Select the correct order of their occurrence in a Java class (choose all that apply):
			
			1 comments
			2 import statement
			3 package statement
			4 methods
			5 class declaration
			6 variables
		</testo><risposte type="checkbox"><risposta type="A">1, 3, 2, 5, 6, 4</risposta><risposta type="B">3, 1, 2, 5, 4, 6</risposta><risposta type="C">3, 2, 1, 4, 5, 6</risposta><risposta type="D">3, 2, 1, 5, 6, 4</risposta></risposte><risposteEsatte>A, B, D</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="3" question="3"><testo>
			Which of the following examples defines a correct Java class structure?
		</testo><risposte type="checkbox"><risposta type="A">
				#connect java compiler;
				#connect java virtual machine;
				class EJavaGuru {}
			</risposta><risposta type="B">
				package java compiler;
				import java virtual machine;
				class EJavaGuru {}
			</risposta><risposta type="C">
				import javavirtualmachine.*;
				package javacompiler;
				class EJavaGuru {
					void method1() {}
					int count;
				}
			</risposta><risposta type="D">
				package javacompiler;
				import javavirtualmachine.*;
				class EJavaGuru {
					void method1() {}
					int count;
				}
			</risposta><risposta type="E">
				#package javacompiler;
				$import javavirtualmachine;
				class EJavaGuru {
					void method1() {}
					int count;
				}
			</risposta><risposta type="F">
				package javacompiler;
				import javavirtualmachine;
				Class EJavaGuru {
					void method1() {}
					int count;
				}
			</risposta></risposte><risposteEsatte>D</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="3" question="3"><testo>
			Which of the following examples defines a correct Java class structure?
		</testo><risposte type="checkbox"><risposta type="A">
				#connect java compiler;
				#connect java virtual machine;
				class EJavaGuru {}
			</risposta><risposta type="B">
				package java compiler;
				import java virtual machine;
				class EJavaGuru {}
			</risposta><risposta type="C">
				import javavirtualmachine.*;
				package javacompiler;
				class EJavaGuru {
					void method1() {}
					int count;
				}
			</risposta><risposta type="D">
				package javacompiler;
				import javavirtualmachine.*;
				class EJavaGuru {
					void method1() {}
					int count;
				}
			</risposta><risposta type="E">
				#package javacompiler;
				$import javavirtualmachine;
				class EJavaGuru {
					void method1() {}
					int count;
				}
			</risposta><risposta type="F">
				package javacompiler;
				import javavirtualmachine;
				Class EJavaGuru {
					void method1() {}
					int count;
				}
			</risposta></risposte><risposteEsatte>D</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="4" question="4"><testo>
			Given the following contents of the Java source code file MyClass.java, select the
			correct options:
			
			// contents of MyClass.java
			package com.ejavaguru;
			import java.util.Date;
			class Student {}
			class Course {}
		</testo><risposte type="checkbox"><risposta type="A">The imported class, java.util.Date, can be accessed only in the class Student.</risposta><risposta type="B">The imported class, java.util.Date, can be accessed by both the Student and Course classes.</risposta><risposta type="C">Both of the classes Student and Course are defined in the package com.ejava guru.</risposta><risposta type="D">Only the class Student is defined in the package com.ejavaguru. The class
								Course is defined in the default Java package.
			</risposta></risposte><risposteEsatte>B, C</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="4" question="4"><testo>
			Given the following contents of the Java source code file MyClass.java, select the
			correct options:
			
			// contents of MyClass.java
			package com.ejavaguru;
			import java.util.Date;
			class Student {}
			class Course {}
		</testo><risposte type="checkbox"><risposta type="A">The imported class, java.util.Date, can be accessed only in the class Student.</risposta><risposta type="B">The imported class, java.util.Date, can be accessed by both the Student and Course classes.</risposta><risposta type="C">Both of the classes Student and Course are defined in the package com.ejava guru.</risposta><risposta type="D">Only the class Student is defined in the package com.ejavaguru. The class
								Course is defined in the default Java package.
			</risposta></risposte><risposteEsatte>B, C</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="5" question="5"><testo>
			Given the following definition of the class EJavaGuru,
			
			class EJavaGuru {
				public static void main(String[] args) {
					System.out.println(args[1]+":"+ args[2]+":"+ args[3]);
				}
			}

			what is the output of the previous class, if it is executed using the following command?
			
				java EJavaGuru one two three four
		</testo><risposte type="checkbox"><risposta type="A">one:two:three</risposta><risposta type="B">EJavaGuru:one:two</risposta><risposta type="C">java:EJavaGuru:one</risposta><risposta type="D">two:three:four</risposta></risposte><risposteEsatte>D</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="5" question="5"><testo>
			Given the following definition of the class EJavaGuru,
			
			class EJavaGuru {
				public static void main(String[] args) {
					System.out.println(args[1]+":"+ args[2]+":"+ args[3]);
				}
			}

			what is the output of the previous class, if it is executed using the following command?
			
				java EJavaGuru one two three four
		</testo><risposte type="checkbox"><risposta type="A">one:two:three</risposta><risposta type="B">EJavaGuru:one:two</risposta><risposta type="C">java:EJavaGuru:one</risposta><risposta type="D">two:three:four</risposta></risposte><risposteEsatte>D</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="6" question="6"><testo>
			Which of the following options, when inserted at //INSERT CODE HERE, will print
			out EJavaGuru?
			
			public class EJavaGuru {
			 // INSERT CODE HERE
			 {
				System.out.println("EJavaGuru");
			 }
			}
		</testo><risposte type="checkbox"><risposta type="A">public void main (String[] args)</risposta><risposta type="B">public void main(String args[])</risposta><risposta type="C">static public void main (String[] array)</risposta><risposta type="D">public static void main (String args)</risposta><risposta type="E">static public main (String args[])</risposta></risposte><risposteEsatte>C</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="6" question="6"><testo>
			Which of the following options, when inserted at //INSERT CODE HERE, will print
			out EJavaGuru?
			
			public class EJavaGuru {
			 // INSERT CODE HERE
			 {
				System.out.println("EJavaGuru");
			 }
			}
		</testo><risposte type="checkbox"><risposta type="A">public void main (String[] args)</risposta><risposta type="B">public void main(String args[])</risposta><risposta type="C">static public void main (String[] array)</risposta><risposta type="D">public static void main (String args)</risposta><risposta type="E">static public main (String args[])</risposta></risposte><risposteEsatte>C</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="7" question="7"><testo>
			What is the meaning of “write once, run anywhere”? Select the correct options:
		</testo><risposte type="checkbox"><risposta type="A">Java code can be written by one team member and executed by other team members.</risposta><risposta type="B">It is for marketing purposes only.</risposta><risposta type="C">It enables Java programs to be compiled once and can be executed by any JVM without recompilation.</risposta><risposta type="D">Old Java code doesn’t need recompilation when newer versions of JVMs are released.</risposta></risposte><risposteEsatte>C</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="7" question="7"><testo>
			What is the meaning of “write once, run anywhere”? Select the correct options:
		</testo><risposte type="checkbox"><risposta type="A">Java code can be written by one team member and executed by other team members.</risposta><risposta type="B">It is for marketing purposes only.</risposta><risposta type="C">It enables Java programs to be compiled once and can be executed by any JVM without recompilation.</risposta><risposta type="D">Old Java code doesn’t need recompilation when newer versions of JVMs are released.</risposta></risposte><risposteEsatte>C</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="8" question="8"><testo>
			A class Course is defined in a package com.ejavaguru. Given that the physical
			location of the corresponding class file is /mycode/com/ejavaguru/Course.class
			and execution takes place within the mycode directory, which of the following lines
			of code, when inserted at // INSERT CODE HERE, will import the Course class into the
			class MyCourse?
		
			// INSERT CODE HERE
			class MyCourse {
				Course c;
			}
		</testo><risposte type="checkbox"><risposta type="A">import mycode.com.ejavaguru.Course;</risposta><risposta type="B">import com.ejavaguru.Course;</risposta><risposta type="C">import mycode.com.ejavaguru;</risposta><risposta type="D">import com.ejavaguru;</risposta><risposta type="E">import mycode.com.ejavaguru*;</risposta><risposta type="F">import com.ejavaguru*;</risposta></risposte><risposteEsatte>B</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="8" question="8"><testo>
			A class Course is defined in a package com.ejavaguru. Given that the physical
			location of the corresponding class file is /mycode/com/ejavaguru/Course.class
			and execution takes place within the mycode directory, which of the following lines
			of code, when inserted at // INSERT CODE HERE, will import the Course class into the
			class MyCourse?
		
			// INSERT CODE HERE
			class MyCourse {
				Course c;
			}
		</testo><risposte type="checkbox"><risposta type="A">import mycode.com.ejavaguru.Course;</risposta><risposta type="B">import com.ejavaguru.Course;</risposta><risposta type="C">import mycode.com.ejavaguru;</risposta><risposta type="D">import com.ejavaguru;</risposta><risposta type="E">import mycode.com.ejavaguru*;</risposta><risposta type="F">import com.ejavaguru*;</risposta></risposte><risposteEsatte>B</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="9" question="9"><testo>
			Examine the following code:

			class Course {
			 String courseName;
			}
			class EJavaGuru {
			 public static void main(String args[]) {
				Course c = new Course();
				c.courseName = "Java";
				System.out.println(c.courseName);
			 }
			}
			
			Which of the following statements will be true if the variable courseName is defined as a private variable?
		</testo><risposte type="checkbox"><risposta type="A">The class EJavaGuru will print Java.</risposta><risposta type="B">The class EJavaGuru will print null.</risposta><risposta type="C">The class EJavaGuru won’t compile.</risposta><risposta type="D">The class EJavaGuru will throw an exception at runtime.</risposta></risposte><risposteEsatte>C</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="9" question="9"><testo>
			Examine the following code:

			class Course {
			 String courseName;
			}
			class EJavaGuru {
			 public static void main(String args[]) {
				Course c = new Course();
				c.courseName = "Java";
				System.out.println(c.courseName);
			 }
			}
			
			Which of the following statements will be true if the variable courseName is defined as a private variable?
		</testo><risposte type="checkbox"><risposta type="A">The class EJavaGuru will print Java.</risposta><risposta type="B">The class EJavaGuru will print null.</risposta><risposta type="C">The class EJavaGuru won’t compile.</risposta><risposta type="D">The class EJavaGuru will throw an exception at runtime.</risposta></risposte><risposteEsatte>C</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="10" question="10"><testo>
			Given the following definition of the class Course,
			
			package com.ejavaguru.courses;
			class Course {
			 public String courseName;
			}
			
			what’s the output of the following code?
			
			package com.ejavaguru;
			import com.ejavaguru.courses.Course;
			class EJavaGuru {
			 public static void main(String args[]) {
				Course c = new Course();
				c.courseName = "Java";
				System.out.println(c.courseName);
			 }
			}
		</testo><risposte type="checkbox"><risposta type="A">The class EJavaGuru will print Java.</risposta><risposta type="B">The class EJavaGuru will print null.</risposta><risposta type="C">The class EJavaGuru will not compile.</risposta><risposta type="D">The class EJavaGuru will throw an exception at runtime.</risposta><risposta type="E">xxxxx</risposta><risposta type="F">xxxxx</risposta></risposte><risposteEsatte>C</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="10" question="10"><testo>
			Given the following definition of the class Course,
			
			package com.ejavaguru.courses;
			class Course {
			 public String courseName;
			}
			
			what’s the output of the following code?
			
			package com.ejavaguru;
			import com.ejavaguru.courses.Course;
			class EJavaGuru {
			 public static void main(String args[]) {
				Course c = new Course();
				c.courseName = "Java";
				System.out.println(c.courseName);
			 }
			}
		</testo><risposte type="checkbox"><risposta type="A">The class EJavaGuru will print Java.</risposta><risposta type="B">The class EJavaGuru will print null.</risposta><risposta type="C">The class EJavaGuru will not compile.</risposta><risposta type="D">The class EJavaGuru will throw an exception at runtime.</risposta><risposta type="E">xxxxx</risposta><risposta type="F">xxxxx</risposta></risposte><risposteEsatte>C</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="11" question="11"><testo>
			Given the following code, select the correct options:
			
			package com.ejavaguru.courses;
			class Course {
			 public String courseName;
			 public void setCourseName(private String name) {
				courseName = name;
			 }
			}
		</testo><risposte type="checkbox"><risposta type="A">You can’t define a method argument as a private variable.</risposta><risposta type="B">A method argument should be defined with either public or default accessibility.</risposta><risposta type="C">For overridden methods, method arguments should be defined with protected accessibility.</risposta><risposta type="D">None of the above</risposta></risposte><risposteEsatte>A</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="11" question="11"><testo>
			Given the following code, select the correct options:
			
			package com.ejavaguru.courses;
			class Course {
			 public String courseName;
			 public void setCourseName(private String name) {
				courseName = name;
			 }
			}
		</testo><risposte type="checkbox"><risposta type="A">You can’t define a method argument as a private variable.</risposta><risposta type="B">A method argument should be defined with either public or default accessibility.</risposta><risposta type="C">For overridden methods, method arguments should be defined with protected accessibility.</risposta><risposta type="D">None of the above</risposta></risposte><risposteEsatte>A</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda><domanda book="OCA Java SE 8 Programmer I Certification Guide" chapter="1" id="1" question="1"><testo>1</testo><risposte type="radio"><risposta type="A">1</risposta></risposte><risposteEsatte>1</risposteEsatte><spiegazione>spiegazione</spiegazione></domanda></domande>